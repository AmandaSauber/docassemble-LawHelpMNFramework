objects:
  - the_courts: ALCourtLoader.using(file_name='Courts.xlsx')
  - alias_name: |
      DAList.using(object_type=Individual,there_are_any=True)
  - users: DAList.using(object_type=ALIndividual, ask_number=True, target_number=1) ## Select one ##
  - users: ALPeopleList.using(complete_attribute='complete', ask_number=True,target_number=1)  ## Select one ##
  - other_parties: ALPeopleList.using(target_number=1, ask_number=True)
  - attorneys: ALPeopleList.using(there_is_another=False)
  - server: ALIndividual
---

############################## User Address and Phone ################################
---
code: |
  users[i].name.first
  users[i].name.last
  users[i].name.middle
  users[i].name.suffix
  users[i].address.address
  users[i].phone_number
  users[i].email
  users[i].complete = True
---
continue button field: users_name
id: User name
question: |
  What is your name?
fields:
  - code: |
      users[0].name_fields()
section: Name
---
continue button field: users_address
id: users address
question: |
  What is your address?
fields:
  - code: |
      users[0].address_fields(country_code=AL_DEFAULT_COUNTRY, default_state=AL_DEFAULT_STATE)
section: Address
---
continue button field: users_phone
id: user phone number
question: |
  What is your phone number?
fields:  
  - Phone number: users[0].phone_number

validation code: |
  import re
  
  digits = re.sub(r'\D', '', users[0].phone_number)

  if len(digits) != 10:
    validation_error("Please enter a phone number in the format (xxx) xxx-xxxx", field="phone_number")

  users[0].phone_number = f"({digits[0:3]}) {digits[3:6]}-{digits[6:10]}"

#validation code: |
#  if not phone_number_is_valid(users[0].phone_number):
#    validation_error("Please enter a phone number in the format (xxx) xxx-xxxx", field="phone_number")
#  phone_number = phone_number_formatted(users[0].phone_number)
section: Phone Number
---
continue button field: users_email
id: user email address
question: |
  What is your email address?
fields:
  - Email address: users[0].email
    required: False
section: Email Address

---
########################### Other Parties Address and Phone ##########################

sets:
  - other_parties[i].name.first
  - other_parties[i].name.last
  - other_parties[i].name.middle
  - other_parties[i].name.suffix
id: names of opposing parties
question: |
  % if user_started_case:
  Name of the person or company that owes you money 
## Modify this language per interview as needed 
  % else:
  Name of ${ ordinal(i) } **plaintiff** or petitioner in this matter
  % endif
fields:
  - code: |
      other_parties[i].name_fields(person_or_business='unsure')
section: Opposing Party Name
---
sets:
  - x.address.address
  - x.address.city
  - x.address.zip
  - x.address.unit
  - x.address.state
  - x.address.country
id: persons address
generic object: ALIndividual
question: |
  What is ${ x.possessive('address') }?
fields:
  - code: |
      x.address_fields(country_code=AL_DEFAULT_COUNTRY, default_state=AL_DEFAULT_STATE)
section: Opposing Party Address
---
####################### MI CODE FOR ADDRESS AND PHONE ######################
#sets:
#  - x.address.address
#  - x.address.city
#  - x.address.zip
#  - x.address.unit
#  - x.address.state
##  - x.address.country
#id: persons address
#generic object: ALIndividual
#question: |
#  What is ${ x.possessive('address') }?
#fields:
#  - code: |
#      x.address_fields(country_code=AL_DEFAULT_COUNTRY, default_state=AL_DEFAULT_STATE, show_country=False)
#---
#id: your address
#sets:
#  - users[0].address.address
#  - users[0].address.city
#  - users[0].address.zip
#  - users[0].address.unit
#  - users[0].address.state
##  - users[0].address.country
#question: |
#  What is your address?
#subquestion: |
#  Use an address where you can be contacted.
#fields:
#  - code: |
#      users[0].address_fields(country_code=AL_DEFAULT_COUNTRY, default_state=AL_DEFAULT_STATE, show_country=False)
#---
#id: user i's address
#sets:
#   - users[i].address.address
#   - users[i].address.city
#   - users[i].address.zip
#   - users[i].address.unit
#   - users[i].address.state
##   - users[i].address.country
#question: |
#  What is ${ users[i] }'s address?
#fields:
#  - Same as your address: users[i].address
#    datatype: object_radio
#    choices:
#      - users[0].address if defined("users[0].address.address") else None
#    object labeler: |
#      lambda y: y.on_one_line()
#    none of the above: |
#      Somewhere else
#    disable others: True
#    show if:
#      code: |
#        defined("users[0].address.address")
#  - code: |
#      users[i].address.address_fields(country_code=AL_DEFAULT_COUNTRY, default_state=AL_DEFAULT_STATE, show_country=False)
#---
#generic object: ALAddress
#template: x.address_label
#content: |
#  Street Address or PO Box
#---
#generic object: ALAddress
#template: x.unit_label
#content: |
#  Apartment, suite, etc
#---
#generic object: ALAddress
#template: x.state_or_province_label
#content: |
#  State or Province
#---
#generic object: ALAddress
#template: x.postal_code_label
#content: |
#  Zip or Postal Code
#---
#id: persons contact information
#generic object: ALIndividual
#question: |
#  What is ${x}'s phone number?
#fields:
#  - Phone: x.phone_number
#    show if:
#      variable: x.no_phone_number
#      is: False
#  - ${ x } does not have a phone or I don't know their number.: x.no_phone_number
#    required: False
#    datatype: yesno
#---
#id: your contact information
#question: |
#  What is your phone number?
#subquestion: |
#  Court staff may need to call you about your case. It's important to give a phone number if possible.
#
#  ${ collapse_template(what_if_no_number_template) }
#fields:
#  - Phone number: users[0].phone_number
#    show if:
#      variable: users[0].no_phone_number
#      is: False
#  - There's NO reliable way to contact me by phone.: users[0].no_phone_number
#    required: False
#    datatype: yesno
#  - note: |
#      ${ if_check_no_phone_template.content }
#    show if: users[0].no_phone_number
#---
#template: what_if_no_number_template
#subject: What if I don't have a phone?
#content: |
#  You can enter someone else's number as long as they can safely pass on messages to you. Tell this person that you are using their number on your court forms. 
#
#  If you don't have a phone **and** nobody can safely pass messages to you, check the checkbox below.
#---
#template: if_check_no_phone_template
#subject: What if I don't have a phone?
#content: |
#  If someone can safely pass messages on to you, **uncheck** the statement above and enter their phone number. Tell this person that you are using their number on your court forms. 
#---
#generic object: ALIndividual
#code: |
#  if x.no_phone_number:
#    x.phone_number = "Unknown phone"
#---
#code: |
#  if users[0].no_phone_number:
#    users[0].phone_number = "Does not have phone"
######### END MI ADDRESS / PHONE CODE #################

---
########################### DOCKET (I.E. FILE NUMBER) NUMBER #########################

continue button field: file_number    # May not need to use the Continue button in all interviews 
id: docket number
question: |
  What is the Court File Number used to track this case in court?
fields:
  - I don't know the case number: dont_know_docket_number
    datatype: yesno    
  - Court File Number: docket_number
    hide if: dont_know_docket_number
    help: |
      You can find this in the upper right-hand corner of the Complaint.
      
################################## USER ATTORNEY #####################################
---
# Not currently using user-has-attorney but keep as reference for incorporation with future interviews
#sets:
#  - users[i].has_attorney
#id: user has attorney
#question: |
#  Do you have a lawyer?
#subquestion: |
#fields:
#  - no label: users[i].has_attorney
#    input type: radio
#    choices:
#      - Yes: True
#      - No: False
---
######### OTHER PARTY ATTORNEY ##########
id: attorneys
generic object: ALPeopleList
question: |
  Does ${ other_parties } have any attorneys?
fields:
  - no label: attorneys.there_are_any
    datatype: yesnoradio
---
id: attorney fax number
generic object: ALIndividual
question: |
  What is ${noun_plural(attorneys)}'s fax number?
fields:
  - no label: x.fax_number
validation code: |
      if not phone_number_is_valid(x.fax_number):
        validation_error("Please enter a fax number in the format (xxx) xxx-xxxx", field="x.fax_number")
      x.fax_number = phone_number_formatted(x.fax_number)

######## USER ROLE - FROM MI CODE ##########
---
template: help_user_ask_role_template    # must edit/replace this if other roles apply
subject: |
  How do I know?
content: |
  You can find the parties by looking at the first page of an existing court document, like a complaint, petition, or answer. The top of the first page is the “caption” which has the basic case information. This area will list all of the parties in the case with their titles.

  If you were the first person to file a form to start this case, you are the Plaintiff. If someone else started this case by filing in court, you are the Defendant.

############ CONFIDENTIAL ADDRESS - FROM MI CODE #############
---
template: confidential_address_family
subject: |
  What if it's not safe for the other side in my case (or someone else) to see my contact information?
content: |
  You can **use an alternate address** on your court forms if you worry for your safety. For example, you can use the address of a friend or family member if they have agreed to let you do this and you are able to get your mail from them. This is important so you can receive copies of everything filed in your case and notices from the court.

---
# # # # # # # # # # # # # # # # Court Loader - Begin # # # # # # # # # # # # # # # # #
code: |
  trial_court_district
  display_court
---
code: |
  if the_courts.county_has_one_court(the_county):
    my_court = the_courts.county_court("my_court", the_county)
  else:
    court_index
    my_court = the_courts.as_court("my_court", court_index)
---
code: |
  def get_judicial_district(the_county):
      if the_county in ["McLeod", "Sibley", "Carver", "Scott", "Dakota", "Le Sueur", "Goodhue"]:
          return "First Judicial District"
      elif the_county == "Ramsey":
          return "Second Judicial District"
      elif the_county in ["Rice", "Waseca", "Steele", "Dodge", "Olmsted", "Wabasha", "Winona", "Freeborn", "Mower", "Fillmore", "Houston"]:
          return "Third Judicial District"
      elif the_county == "Hennepin":
          return "Fourth Judicial District"
      elif the_county in ["Lincoln", "Lyon", "Redwood", "Brown", "Nicollet", "Pipestone", "Murray", "Cottonwood", "Watonwan", "Blue Earth", "Rock", "Nobles", "Jackson", "Martin", "Faribault"]:
          return "Fifth Judicial District"
      elif the_county in ["St. Louis", "Lake", "Cook", "Carlton"]:
          return "Sixth Judicial District"
      elif the_county in ["Clay", "Becker", "Otter Tail", "Wadena", "Douglas", "Todd", "Morrison", "Mille Lacs", "Stearns", "Benton"]:
          return "Seventh Judicial District"
      elif the_county in ["Wilkin", "Grant", "Traverse", "Big Stone", "Stevens", "Pope", "Swift", "Lac qui Parle", "Kandiyohi", "Chippewa", "Meeker", "Yellow Medicine", "Renville"]:
          return "Eighth Judicial District"
      elif the_county in ["Kittson", "Roseau", "Lake of the Woods", "Marshall", "Beltrami", "Koochiching", "Pennington", "Red Lake", "Polk", "Clearwater", "Norman", "Mahnomen", "Hubbard", "Cass", "Itasca", "Crow Wing", "Aitkin"]:
          return "Ninth Judicial District"
      elif the_county in ["Pine", "Kanabec", "Sherburne", "Isanti", "Chisago", "Anoka", "Wright", "Washington"]:
          return "Tenth Judicial District"
      else:
          return "Unknown Judicial District"

  trial_court_district = get_judicial_district(the_county)
---
id: district and county
question: |
  What county are you being sued in?
fields:
  - "no label": the_county
    code: sorted(the_courts.county_list())
    required: True
    label above field: True
    datatype: str
  - note: |
      You can find the name of the county in the top left-hand corner of the Complaint.
---
question: |
  There is more than one court in your county. Pick the court below.
fields:
  - "no label": court_index
    code: the_courts.matching_courts_in_county(the_county)
---
continue button field: display_court
question: |
  You selected "${ my_court }"
subquestion: |
  ${ my_court.address.block() }
---
# # # # # # # # # # # # # # # # Court Loader - End # # # # # # # # # # # # # # # # # #