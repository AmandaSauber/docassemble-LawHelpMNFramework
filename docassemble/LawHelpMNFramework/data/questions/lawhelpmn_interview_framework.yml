############# TAKEN FROM MLH AS A GUIDE - NEEDS UPDATING FOR LAWHELPMN ###############
######################################################################################

########### INCLUDE ############
---
include:
  - docassemble.AssemblyLine:assembly_line.yml
  - lawhelpmn_cover_sheet.yml ### NEED TO CREATE THIS FILE - this is a word doc that's included in the Templates section for MI ###
  - lawhelpmn_terms.yml ### NEED TO CREATE THIS FILE ###
  - lawhelpmn_visual.yml ### NEED TO CREATE THIS FILE ###
  - docassemble.MNCourts:MN_Courts.yml
  
########### MODULES ###########
---
modules:
  - docassemble.demo.accordion # for review screen accordions
  - docassemble.AssemblyLine.al_courts ## DO I ACTUALLY NEED THIS FOR MY COURT CODE TO WORK??

########## FEATURES ###########
---
features:
  bootstrap theme: docassemble.BrandingMN:data/static/LHBranding_bootstrap.min.css 
  css:
    - LawHelpMN2x_002_resized.png
  small screen navigation: False  # turn off nav panel on small screens
  progress bar: True
  show progress bar percentage: True
  progress bar method: default

########## OBJECTS ############
---
objects:
  - al_logo: DAStaticFile.using(filename="LawHelpMN2x_002_resized.png")  ## Do i need this in Objects? I don't currently have an al_logo object.. ##
  - the_courts: ALCourtLoader.using(file_name='Courts.xlsx')
  - alias_name: |
      DAList.using(object_type=Individual,there_are_any=True)
  - users: DAList.using(object_type=ALIndividual, ask_number=True, target_number=1) ## Select one ##
  - users: ALPeopleList.using(complete_attribute='complete', ask_number=True,target_number=1)  ## Select one ##
  - other_parties: ALPeopleList.using(target_number=1, ask_number=True)
  - attorneys: ALPeopleList.using(there_is_another=False)
  - server: ALIndividual
---
# This block defines Assembly Line-level variables and LawHelpMN Organization-level variables that will most likely be consistent throughout the portfolio.
code: |
  AL_DEFAULT_COUNTRY = "US"   # default country and list of states in address fields
  AL_DEFAULT_STATE = "MN"     # default state in address fields
  AL_ORGANIZATION_HOMEPAGE = get_config('app homepage', 'https://www.lawhelpmn.org/forms')
  AL_ORGANIZATION_TITLE = "Court Forms Online"
  AL_DEFAULT_OVERFLOW_MESSAGE = " [CONTINUED ON ATTACHMENT.]"  

  ##### The below variables can be used to quickly and consistently include common links and language. ######
  
  LAWHELPMN_GUIDE = "[Your Legal Guide](https://www.lawhelpmn.org/#main-container)"
  LAWHELPMN_PROVIDERS_AND_CLINICS = "[You can use the Providers & Clinics tool to search for a lawyer or legal services in your area.](https://www.lawhelpmn.org/providers-and-clinics)"

  ##### This will get the docassemble-level metadata short title #####
  
  interview_short_title = all_variables(special='metadata').get('short title')
  interview_title = all_variables(special='metadata').get('title')
---
# These blocks contains LawHelpMN Organization-level variables that will vary from interview to interview.
# These are the organization defaults.
# Copy each block to an individual interview yml file and override as needed. 
code: |
  github_repo_name = "docassemble-XXXX"  ## Replace XXXX with the name of your package (i.e. 'docassemble-AnswerToComplaintAos')
---
### MIGHT NOT NEED ALL OF THESE ###
code: |
  LawHelpMN_instructions_included = True  # are instructions generated with the form(s)/letter(s)?
---
code: |
  LawHelpMN_multiple_forms = True         # does the interview produce multiple forms?
---
code: |
  LawHelpMN_court_forms = True             # Does this create forms to be filed with the court?
---
code: |
  LawHelpMN_form_type = "form(s)"          # form / forms / letter (for use in intro/outro pages)
---
code: |
  LawHelpMN_time_min = 10
  LawHelpMN_time_max = 45
---
code: |
  LawHelpMN_materials_included = False      # include a list of needed info to complete the interview?
---
template: LawHelpMN_materials              # default list of needed info. Keep as bulleted list if replacing
content: |
  To complete this interview, you will need:

  * Information about yourself (i.e. contact information)
  * Information about your legal issue
  * Information about the people involved (i.e. co-users, opposing parties, attorneys, etc.)
  * Information about your court case    # Apply this when there is an existing court case
  * Any relevant documents or photos you might need to provide 

########## REVIEW AND EDIT ANSWERS #############
---
mandatory: true
code: |
  review_empty_explainer = "This page starts out blank. As you answer questions, they will show up here. Then you can edit your answers."
  review_accordion_explainer = "Click on the section titles to expand the section and edit answers."  ## Incorporate this when using accordions on review screens ## 
  
---
### CREATE A STANDARD WELCOME MESSAGE ### 

# default welcome info; keep relatively short. If lots of preconditions/warnings, make separate screen
template: LawHelpMN_welcome_message     
content: |
  Welcome to the ${ LawHelpMN_interview_short_title } interview.

  This interview will help you prepare your ${ LawHelpMN_form_type } and give you next steps.  

  This interview does not give legal advice. Using this program does not mean you have an attorney-client relationship.

  You alone are responsible for the outcome of your case. If you need legal advice, you should contact a lawyer. Find [your local legal aid provider](https://www.lsc.gov/what-legal-aid/find-legal-aid).
  
---
############ SIGN IN / SIGN UP ACTIONS #############

# Override what's in al_visual.yml 
default screen parts:  
  exit link: exit                    # sets behavior of Exit buttons
  exit url: https://www.lawhelpmn.org/
  right: |
    ✎ [Review / Edit Answers](${ url_action('review_full') })
  under: |
    % if not user_logged_in():
    [:key: Sign in](${url_of('login', next=interview_url())}) or [sign up](${url_of('register', next=interview_url())}) to save your progress.
    % endif
  footer: |
    [:share-alt-square: Share](${ url_ask([{'undefine': ['al_sharing_type','al_how_share_link']}, 'al_share_form_screen', {'recompute': ['al_did_share_form']}, 'al_share_results']) }){:target="_blank"}
    [:info-circle: About](${ url_action('about_this_interview') }){:target="_blank"}   ### NEED TO CREATE THIS ABOUT FILE ####
    footer: |
    [:comment-dots: Feedback](${ feedback_link(user_info(), i="docassemble.lawhelpmnframework:feedback.yml", github_repo=github_repo_name) } ){:target="_blank"}  
  short logo: |
    <span class="title-container">
      <span class="al-logo">
        <img src="${ al_logo.url_for() }" alt="${ al_logo.alt_text }"/>
      </span>
      <span class="al-title-short">
        <span class="title-row-1">${ all_variables(special='metadata').get('short title','').rstrip() }</span>
      </span>
    </span>
  back button color: secondary
---
# creates a template for adding a sign-in message back to "under" screen part if needed
template: sign_in_message
content: |
  % if not user_logged_in():
    [:key: Sign in](${url_of('login', next=interview_url())}) or [sign up](${url_of('register', next=interview_url())}) to save your progress.
  % endif
 ---
###### NOT SURE I NEED THIS?? ######
# To create consistent language on generic continue buttons. If it is ever decided to change that language, it only need to be done here.
# This is also useful for referring to a button label within page text. For example: “Just click the ${LawHelpMN_continue_button_label} button to save your progress.”
mandatory: true
code: |
  LawHelpMN_continue_button_label = "Continue"
  LawHelpMN_back_button_label = "Undo"

  set_parts(continue_button_label = LawHelpMN_continue_button_label, back_button_label = LawHelpMN_back_button_label) 

  
# # # # # # # # # # # # # # # # Standard Intro Pages # # # # # # # # # # # # # 
---
# LawHelpMN standard intro pages
# Simply make a reference to the LawHelpMN_standard_intro_pages variable in an interview's main Interview Order block in order to bring in these standard intro pages. 
code: |
  LawHelpMN_intro_landing
  LawHelpMN_agree_terms
  LawHelpMN_intro_navigate_save
  LawHelpMN_standard_intro_pages = True

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 

# The blocks below are the standard intro pages for all LawHelpMN tools.
# Any of these pages can be overridden in an interview's custom yml file by creating a question block that uses the respective continue button field for its own continue button field.

---
# This can be used as the very first screen for an interview.
id: LawHelpMN intro landing FirstScreen
question: |
  ${ LawHelpMN_interview_short_title }
subquestion: |
  ${ LawHelpMN_welcome_message }
  
  It will probably take about **${ LawHelpMN_time_min } to ${ LawHelpMN_time_max } minutes** to answer all the questions.
  % if LawHelpMN_materials_included:
  
    To fill out your forms **you will need:**
    
    ${ LawHelpMN_materials }
  % endif
  
  Your personalized ${ LawHelpMN_form_type } will be ready after you answer all the questions. 
  % if LawHelpMN_instructions_included:
    You will also get instructions for what to do next with your ${ LawHelpMN_form_type }.
  % endif
continue button field: LawHelpMN_intro_landing

---
# for now this is separate, but could incorporate in another intro page
id: terms of use       
question: |
  Terms of Use and Privacy Policy
fields:
  - note: |          
      Please review the Terms of Use and Privacy Policy:
      ${ display_template(LawHelpMN_terms_of_use, scrollable=True) } 
  - I agree to the Terms of Use and Privacy Policy: i_understand
    datatype: checkboxes
    none of the above: False    
    minlength: 1
    choices:
      - I understand and wish to continue
    validation messages:
      minlength: |
        You must accept the Terms of Use and Privacy Policy to continue.  
continue button field: LawHelpMN_agree_terms   

--- 
if: user_logged_in()
id: LawHelpMN intro saving answers logged in
question: |
  Using this tool
subquestion: |
  <h2 class="h5">Changing an Answer</h2>
  If you make a mistake, you can use the **${ LawHelpMN_back_button_label }** button below to go back. You can also see and edit earlier answers by clicking the "✎ Review / Edit" link on the left.
  
  <h2 class="h5">Saving Your Work</h2>
  You are already signed in. Just click the **${LawHelpMN_continue_button_label}** button to save your progress. 
  
  Go to the menu at the top of the screen and select “My Forms” to go back to a saved form.
  
  <h2 class="h5">Help Text</h2>
  Click {green underlined words} for a definition or more information.   
terms:
  green underlined words: |
    More information appears when you click the green underlined words.
continue button field: LawHelpMN_intro_navigate_save
---
if: not user_logged_in()
id: LawHelpMN intro saving answers logged out
question: |
  Using this tool
subquestion: |
  <h2 class="h5">Changing an Answer</h2>
  If you make a mistake, you can use the **${ LawHelpMN_back_button_label }** button below to go back. You can also see and edit earlier answers by clicking the "✎ Review / Edit" link on the left.
  
  <h2 class="h5">Saving Your Work</h2>
  To save your work, sign in or sign up for an account. Click the "Sign in" or "Sign up" link below the **Continue** button. Or go to the
  % if device().is_mobile:
  :bars:
  % endif
  **menu** at the top of the screen and click "Sign in or sign up to save answers".
  
  To go back to a saved form, log in. Then go to the menu at the top of the screen and select “My Forms.”
  
  <h2 class="h5">Help Text</h2>
  click {green underlined words} for a definition or more information. 
terms:
  green underlined words: |
    More information appears when you click the green underlined words.
continue button field: LawHelpMN_intro_navigate_save

# # # # # # # # # # # # # # # # Standard Outro Pages # # # # # # # # # # # # # 
---
# LawHelpMN standard outro pages
# Simply make a reference to the LawHelpMN_standard_outro_pages variable in an interview's main Interview Order block in order to bring in these standard outro pages. Or, reference and/or override each block individually.
code: |
  if LawHelpMN_court_forms:
    LawHelpMN_outro_filing_information    
 # if LawHelpMN_esign_supported:        
 #   LawHelpMN_esign
 #   if LawHelpMN_esign:
 #     signature_date
  LawHelpMN_outro_saving_answers
  LawHelpMN_standard_outro_pages = True

  ### ### consider adding a variable to assess whether e-signature is applicable. If yes, show DA signature code, and if No, then skip the DA signature code, forcing the user to sign manually.

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
# The blocks below are the standard outro pages for all LawHelpMN tools.
# Any of these pages can be overridden in an interview's custom yml file by creating a question block that uses the respective 'continue button field' for its own continue button field.
---
id: LawHelpMN outro filing information
question: |
  This website **does not file** your ${ LawHelpMN_form_type }.
subquestion: |
  **You need to file** your ${ LawHelpMN_form_type } at court in person, by mail, e-mail, or by e-filing. Contact your court to find out how you can file. 
  
  ${ collapse_template(filing_info_template) }
  % if LawHelpMN_multiple_forms:
  
    This tool produces multiple forms for your case. On the download page at the end of this tool, **download and save all the forms**.
  % endif
  % if LawHelpMN_instructions_included:
  % if LawHelpMN_multiple_forms:
    Read the instructions that come with your forms for more information, including when to file each form.
  % else:
    Read the instructions that come with your forms for more information.
  % endif
  % endif
continue button field: LawHelpMN_outro_filing_information
progress: 97
  
---
if: user_logged_in()
code: |
  LawHelpMN_outro_saving_answers = True
---
if: not user_logged_in()
id: LawHelpMN outro saving answers logged out
question: |
  Saving your answers
subquestion: |
  You can save your answers so that you can come back to this tool later. This will allow you to make changes to your ${ LawHelpMN_form_type } without starting over.

  Below the **Continue** button, click "Sign in" if you have an account or "Sign up" to make one. You can also go to the
  % if device().is_mobile:
  :bars:
  % endif
  menu at the top of the screen and click "Sign in or sign up to save answers".

  To go back to saved answers, make sure you are logged in. Then go to the menu at the top of the screen and select “My Forms.”
continue button field: LawHelpMN_outro_saving_answers
progress: 99

########### FINAL (DOWNLOAD) SCREEN ##############
---
## NOT SURE I NEED A CUSTOM SCREEN HERE?? NEED TO PONDER ON THIS ONE.. 
id: DownloadScreen
event: LawHelpMN_download
question: |
  Get your ${ LawHelpMN_form_type }
subquestion: |
  You can **view**, **download**, or **e-mail** your ${ LawHelpMN_form_type } to yourself below. Click the "✎ Review / Edit" button to fix any mistakes.
    
  <h2 class="h3">Download or e-mail your ${ LawHelpMN_form_type }</h2>

  ${ action_button_html(url_action('review_full'), label='✎ Review / Edit', color='info') }
  
  ${ al_user_bundle.download_list_html() }

  ${ al_user_bundle.send_button_html(show_editable_checkbox=False) }
progress: 100
---
# as needed, we can also use this to make it clear there may be a delay before download screen. Especially important if you go right from a substantive question to download screen.
id: patience, assembling
continue button field: LawHelpMN_patience_assembling
question: |
  Almost done
subquestion: |
  Click **${LawHelpMN_continue_button_label}** to complete your ${ LawHelpMN_form_type }. This may take a few minutes.

  **Do not** refresh your screen. 
progress: 99

---
# # # # # # # # # # # # # # Court Loader - Begin # # # # # # # # # # # # # #
code: |
  trial_court_district
  display_court
---
code: |
  if the_courts.county_has_one_court(the_county):
    my_court = the_courts.county_court("my_court", the_county)
  else:
    court_index
    my_court = the_courts.as_court("my_court", court_index)
---
code: |
  def get_judicial_district(the_county):
      if the_county in ["McLeod", "Sibley", "Carver", "Scott", "Dakota", "Le Sueur", "Goodhue"]:
          return "First Judicial District"
      elif the_county == "Ramsey":
          return "Second Judicial District"
      elif the_county in ["Rice", "Waseca", "Steele", "Dodge", "Olmsted", "Wabasha", "Winona", "Freeborn", "Mower", "Fillmore", "Houston"]:
          return "Third Judicial District"
      elif the_county == "Hennepin":
          return "Fourth Judicial District"
      elif the_county in ["Lincoln", "Lyon", "Redwood", "Brown", "Nicollet", "Pipestone", "Murray", "Cottonwood", "Watonwan", "Blue Earth", "Rock", "Nobles", "Jackson", "Martin", "Faribault"]:
          return "Fifth Judicial District"
      elif the_county in ["St. Louis", "Lake", "Cook", "Carlton"]:
          return "Sixth Judicial District"
      elif the_county in ["Clay", "Becker", "Otter Tail", "Wadena", "Douglas", "Todd", "Morrison", "Mille Lacs", "Stearns", "Benton"]:
          return "Seventh Judicial District"
      elif the_county in ["Wilkin", "Grant", "Traverse", "Big Stone", "Stevens", "Pope", "Swift", "Lac qui Parle", "Kandiyohi", "Chippewa", "Meeker", "Yellow Medicine", "Renville"]:
          return "Eighth Judicial District"
      elif the_county in ["Kittson", "Roseau", "Lake of the Woods", "Marshall", "Beltrami", "Koochiching", "Pennington", "Red Lake", "Polk", "Clearwater", "Norman", "Mahnomen", "Hubbard", "Cass", "Itasca", "Crow Wing", "Aitkin"]:
          return "Ninth Judicial District"
      elif the_county in ["Pine", "Kanabec", "Sherburne", "Isanti", "Chisago", "Anoka", "Wright", "Washington"]:
          return "Tenth Judicial District"
      else:
          return "Unknown Judicial District"

  trial_court_district = get_judicial_district(the_county)
---
id: district and county
question: |
  What county are you being sued in?
fields:
  - "no label": the_county
    code: sorted(the_courts.county_list())
    required: True
    label above field: True
    datatype: str
  - note: |
      You can find the name of the county in the top left-hand corner of the Complaint.
---
question: |
  There is more than one court in your county. Pick the court below.
fields:
  - "no label": court_index
    code: the_courts.matching_courts_in_county(the_county)
---
continue button field: display_court
question: |
  You selected "${ my_court }"
subquestion: |
  ${ my_court.address.block() }
---
# # # # # # # # # # # # # # # Court Loader - End # # # # # # # # # # # # # # #
---
# # # # # # # # # # # Snapshot Code # # # # # # # # # # # #
code: |
  store_variables_snapshot(
  	data=stuff_to_snapshot, persistent=True
  	)
  snapshot_interview_state = True
---
code: |
  stuff_to_snapshot = {
  	'begin_time': str(current_datetime().format_datetime(format='yyyy-MM-dd h:mm a')),
  	}
  snapshot_interview_state
  snapshot_start = True  
---
code: |
  stuff_to_snapshot['zip'] = showifdef('users[0].address.zip')
  stuff_to_snapshot['number_of_forms'] = len(al_court_bundle.enabled_documents())
  stuff_to_snapshot['end_time'] = str(current_datetime().format_datetime(format='yyyy-MM-dd h:mm a'))
  reconsider('snapshot_interview_state')
  snapshot_download = True
---
# # # # Interview Down / Maintenance Message # # # #

# Put this code at top of an interview if the interview needs to be taken down for a little while.
# ---
# id: interview under maintenance screen
# mandatory: True
# question: |
# <i class="fa-solid fa-circle-exclamation fa-3x"></i>  Closed for Maintenance
# subquestion: |  
#   **This form is under maintenance.** Please check back soon.
#  
#   Do you need more help? You can:
# 
#   * [Use the Legal Guide](https://www.lawhelpmn.org/#main-container) to get free legal information or find a lawyer.
#   * [Go to the Self Help Library](https://www.lawhelpmn.org/self-help-library) for Minnesota legal information.
---
#### DO I NEED TO OVERRIDE AL_VISUAL?? Might be able to remove this whole section ####

### Share link in Footer ###
comment: |
  Overridden from `al_visual.yml` to turn off sms
code: |
  if al_how_share_link == 'email':
    if al_sharing_type == "tell_friend":
      success = send_email(to=share_interview_contact_method, template=al_tell_a_friend_message_template)
    else:
      success = send_email(to=share_interview_contact_method, template=al_share_answers_message_template)
  al_did_share_form = True
---
continue button field: al_share_form_screen
id: al share form screen
question: |
  Share this website
fields:
  - What do you want to do?: al_sharing_type
    datatype: radio
    choices:
      - Tell a friend about this website: tell_friend
        default: True
#       - Share my answers and progress with someone: share_answers
  - How do you want to share the link?: al_how_share_link
    datatype: radio
    choices:
      - Email: email
      - Just show me the link. I will share it myself.: link_only
    js show if: |
      val("al_sharing_type") === "tell_friend" || val("al_sharing_type") === "share_answers" 
  - note: |
      **Note**: the person you share this link with will be able to **see and
      edit** your answers on this form.
    js show if: |
      val("al_sharing_type") === "share_answers" &&  ( val("al_how_share_link") === "email" || val("al_how_share_link") === "link_only" )
  - note: |
      You can copy and share this link
      
      ${ copy_button_html(  interview_url(i=user_info().filename, style="short", new_session=1), label=al_copy_button_label.show(), tooltip_inert_text=al_copy_button_tooltip_inert_text.show(), tooltip_copied_text = al_copy_button_tooltip_copied_text.show() ) }
    js show if: |
      val("al_sharing_type") === "tell_friend" && val("al_how_share_link") === "link_only"      
  - note: |
      You can copy and share this link (expires in 48 hours)
      ${ copy_button_html( interview_url(temporary=48), label=al_copy_button_label.show(), tooltip_inert_text=al_copy_button_tooltip_inert_text.show(), tooltip_copied_text = al_copy_button_tooltip_copied_text.show()) }
    js show if: |
      val("al_sharing_type") === "share_answers" && val("al_how_share_link") === "link_only"
  - Email you want to send this to: share_interview_contact_method
    validate: |
        lambda text: re.match("\S+@\S+", text)
    show if:
      variable: al_how_share_link
      is: email
  - Message: tell_a_friend_message
    datatype: area
    default: |
      Hi, I wanted to let you know about a free website that I learned about:
      "${single_paragraph(all_variables(special='metadata').get('title', AL_ORGANIZATION_TITLE))}". I think this might
      help you, too. Check it out at the link in this message:       
    js show if: |
      val("al_how_share_link") === "email" && val("al_sharing_type") === "tell_friend"
  - Message: share_interview_answers_message
    datatype: area
    default: |
      Hi, I wanted to share my progress on a form on LawHelpMN.
      If you click this link, you can follow along or finish the form for me.
    js show if: |
      val("al_how_share_link") === "email" && val("al_sharing_type") === "share_answers"      
  - Your name: al_share_form_from_name
    default: ${ str(users[0]) if defined('users[0].name.first') else '' } 
    show if:
      variable: al_how_share_link
      is: email
back button label: |
  Back to your form
---
#### Overrides templates so they maintain newlines
template: al_share_answers_message_template
subject: |
  ${ AL_ORGANIZATION_TITLE } from ${ al_share_form_from_name }
content: |
  ${ share_interview_answers_message.replace("\n", "<br>") }
  Click the link below to view and edit ${ al_share_form_from_name }'s
  progress so far:
  
  ${ interview_url(temporary=48) }
---
template: al_tell_a_friend_message_template
subject: |
  ${ al_share_form_from_name } wants to tell you about ${ AL_ORGANIZATION_TITLE }
content: |
  ${ tell_a_friend_message.replace("\n", "<br>") }
  ${ interview_url(i=user_info().filename, style="short", new_session=1) }


### About page in Footer ###
---
comment: |
  Overrides About page from `al_visual.yml`
template: about_this_interview_version_info
content: |
  % if all_variables(special='metadata').get('help_page_title','').rstrip() and all_variables(special='metadata').get('help_page_url','').rstrip():
  To learn more about this legal topic, go to: [${ all_variables(special='metadata').get('help_page_title','').rstrip() }](${ all_variables(special='metadata').get('help_page_url','').rstrip() }).
  % endif

  % if interview_metadata.get("main_interview_key"):
    <%
      MAIN_METADATA = interview_metadata[interview_metadata["main_interview_key"]]
    %>
  % elif len(interview_metadata) > 1:    
    <% 
      del(interview_metadata["main_interview_key"]) # DADict creates the key on lookup above
      MAIN_METADATA = next(iter(interview_metadata.values())) 
    %>
  % else:
    <% MAIN_METADATA = all_variables(special='metadata') %>
  % endif
  <% ORIGINAL_FORMS = MAIN_METADATA.get("original_form", []) if isinstance(MAIN_METADATA.get("original_form"), list) else ([MAIN_METADATA.get("original_form", "")] if MAIN_METADATA.get("original_form") else []) %>

  % if len(ORIGINAL_FORMS) > 1:
  View the original version of this form at the links below:

  % for url in [url for url in ORIGINAL_FORMS if url.strip() != "None" and url.startswith("http")]:
  * [${ url }](${ url })
  % endfor
  % elif len(ORIGINAL_FORMS) == 1:
  [View the original version of this form](${ ORIGINAL_FORMS[0] }).
  % endif
  
  [LawHelpMN](https://www.lawhelpmn.org/about-us) made this free tool. The goal of the LawHelpMN website is to provide accurate and easy-to-understand legal information.

  **Version Information:** "${all_variables(special='metadata').get('title','').rstrip()}" version `${ package_version_number }`. This tool also uses code from the Document Assembly Line Project, version `${ al_version }`.
  
###### REMOVE THE FOLLOWING?? #####
# Removing the below for now because it's pulling up info from wrong github repo. See issue 174.
#  % if package_updated_on:
#    **Version Information:** "${all_variables(special='metadata').get('title','').rstrip()}" version `${ package_version_number }`; AssemblyLine version `${ al_version }`. Last updated on ${ package_updated_on }. [:fab-fa-github: View code on GitHub](${ github_url }).  
#  % else:
#  **Version Information:** "${all_variables(special='metadata').get('title','').rstrip()}" version `${ package_version_number }`. This tool also uses code from the Document Assembly Line Project, version `${ al_version }`.
#  % endif


###### User/Other Parties Address and Phone #######
---
code: |
  users[i].name.first
  users[i].name.last
  users[i].name.middle
  users[i].name.suffix
  users[i].address.address
  users[i].phone_number
  users[i].email
  users[i].complete = True
---
continue button field: users_name
id: User name
question: |
  What is your name?
fields:
  - code: |
      users[0].name_fields()
section: Name
---
continue button field: users_address
id: users address
question: |
  What is your address?
fields:
  - code: |
      users[0].address_fields(country_code=AL_DEFAULT_COUNTRY, default_state=AL_DEFAULT_STATE)
section: Address
---
continue button field: users_phone
id: user phone number
question: |
  What is your phone number?
fields:  
  - Phone number: users[0].phone_number

validation code: |
  import re
  
  digits = re.sub(r'\D', '', users[0].phone_number)

  if len(digits) != 10:
    validation_error("Please enter a phone number in the format (xxx) xxx-xxxx", field="phone_number")

  users[0].phone_number = f"({digits[0:3]}) {digits[3:6]}-{digits[6:10]}"

#validation code: |
#  if not phone_number_is_valid(users[0].phone_number):
#    validation_error("Please enter a phone number in the format (xxx) xxx-xxxx", field="phone_number")
#  phone_number = phone_number_formatted(users[0].phone_number)
section: Phone Number
---
continue button field: users_email
id: user email address
question: |
  What is your email address?
fields:
  - Email address: users[0].email
    required: False
section: Email Address
---
sets:
  - other_parties[i].name.first
  - other_parties[i].name.last
  - other_parties[i].name.middle
  - other_parties[i].name.suffix
id: names of opposing parties
question: |
  % if user_started_case:
  Name of the person or company that owes you money
  % else:
  Name of ${ ordinal(i) } **plaintiff** or petitioner in this matter
  % endif
fields:
  - code: |
      other_parties[i].name_fields(person_or_business='unsure')
section: Opposing Party Name
---
sets:
  - x.address.address
  - x.address.city
  - x.address.zip
  - x.address.unit
  - x.address.state
  - x.address.country
id: persons address
generic object: ALIndividual
question: |
  What is ${ x.possessive('address') }?
fields:
  - code: |
      x.address_fields(country_code=AL_DEFAULT_COUNTRY, default_state=AL_DEFAULT_STATE)
section: Opposing Party Address
---
####################### MI CODE FOR ADDRESS AND PHONE ######################
sets:
  - x.address.address
  - x.address.city
  - x.address.zip
  - x.address.unit
  - x.address.state
#  - x.address.country
id: persons address
generic object: ALIndividual
question: |
  What is ${ x.possessive('address') }?
fields:
  - code: |
      x.address_fields(country_code=AL_DEFAULT_COUNTRY, default_state=AL_DEFAULT_STATE, show_country=False)
---
id: your address
sets:
  - users[0].address.address
  - users[0].address.city
  - users[0].address.zip
  - users[0].address.unit
  - users[0].address.state
#  - users[0].address.country
question: |
  What is your address?
subquestion: |
  Use an address where you can be contacted.
fields:
  - code: |
      users[0].address_fields(country_code=AL_DEFAULT_COUNTRY, default_state=AL_DEFAULT_STATE, show_country=False)
---
id: user i's address
sets:
   - users[i].address.address
   - users[i].address.city
   - users[i].address.zip
   - users[i].address.unit
   - users[i].address.state
#   - users[i].address.country
question: |
  What is ${ users[i] }'s address?
fields:
  - Same as your address: users[i].address
    datatype: object_radio
    choices:
      - users[0].address if defined("users[0].address.address") else None
    object labeler: |
      lambda y: y.on_one_line()
    none of the above: |
      Somewhere else
    disable others: True
    show if:
      code: |
        defined("users[0].address.address")
  - code: |
      users[i].address.address_fields(country_code=AL_DEFAULT_COUNTRY, default_state=AL_DEFAULT_STATE, show_country=False)
---
generic object: ALAddress
template: x.address_label
content: |
  Street Address or PO Box
---
generic object: ALAddress
template: x.unit_label
content: |
  Apartment, suite, etc
---
generic object: ALAddress
template: x.state_or_province_label
content: |
  State or Province
---
generic object: ALAddress
template: x.postal_code_label
content: |
  Zip or Postal Code
---
id: persons contact information
generic object: ALIndividual
question: |
  What is ${x}'s phone number?
fields:
  - Phone: x.phone_number
    show if:
      variable: x.no_phone_number
      is: False
  - ${ x } does not have a phone or I don't know their number.: x.no_phone_number
    required: False
    datatype: yesno
---
id: your contact information
question: |
  What is your phone number?
subquestion: |
  Court staff may need to call you about your case. It's important to give a phone number if possible.

  ${ collapse_template(what_if_no_number_template) }
fields:
  - Phone number: users[0].phone_number
    show if:
      variable: users[0].no_phone_number
      is: False
  - There's NO reliable way to contact me by phone.: users[0].no_phone_number
    required: False
    datatype: yesno
  - note: |
      ${ if_check_no_phone_template.content }
    show if: users[0].no_phone_number
---
template: what_if_no_number_template
subject: What if I don't have a phone?
content: |
  You can enter someone else's number as long as they can safely pass on messages to you. Tell this person that you are using their number on your court forms. 

  If you don't have a phone **and** nobody can safely pass messages to you, check the checkbox below.
---
template: if_check_no_phone_template
subject: What if I don't have a phone?
content: |
  If someone can safely pass messages on to you, **uncheck** the statement above and enter their phone number. Tell this person that you are using their number on your court forms. 
---
generic object: ALIndividual
code: |
  if x.no_phone_number:
    x.phone_number = "Unknown phone"
---
code: |
  if users[0].no_phone_number:
    users[0].phone_number = "Does not have phone"
######### END MI ADDRESS / PHONE CODE #################

---
###### DOCKET (I.E. FILE NUMBER) NUMBER #######
continue button field: file_number    # May not need to use the Continue button in all interviews 
id: docket number
question: |
  What is the Court File Number used to track this case in court?
fields:
  - I don't know the case number: dont_know_docket_number
    datatype: yesno    
  - Court File Number: docket_number
    hide if: dont_know_docket_number
    help: |
      You can find this in the upper right-hand corner of the Complaint.
      
################### USER ATTORNEY #######################
---
# Not currently using user-has-attorney but keep as reference for incorporation with future interviews
#sets:
#  - users[i].has_attorney
#id: user has attorney
#question: |
#  Do you have a lawyer?
#subquestion: |
#fields:
#  - no label: users[i].has_attorney
#    input type: radio
#    choices:
#      - Yes: True
#      - No: False
---
######### OTHER PARTY ATTORNEY ##########
id: attorneys
generic object: ALPeopleList
question: |
  Does ${ other_parties } have any attorneys?
fields:
  - no label: attorneys.there_are_any
    datatype: yesnoradio
---
id: attorney fax number
generic object: ALIndividual
question: |
  What is ${noun_plural(attorneys)}'s fax number?
fields:
  - no label: x.fax_number
validation code: |
      if not phone_number_is_valid(x.fax_number):
        validation_error("Please enter a fax number in the format (xxx) xxx-xxxx", field="x.fax_number")
      x.fax_number = phone_number_formatted(x.fax_number)

######## USER ROLE ##########
---
template: help_user_ask_role_template    # must edit/replace this if other roles apply
subject: |
  How do I know?
content: |
  You can find the parties by looking at the first page of an existing court document, like a complaint, petition, or answer. The top of the first page is the “caption” which has the basic case information. This area will list all of the parties in the case with their titles.

  If you were the first person to file a form to start this case, you are the Plaintiff. If someone else started this case by filing in court, you are the Defendant.

############ CONFIDENTIAL ADDRESS #############
---
template: confidential_address_family
subject: |
  What if it's not safe for the other side in my case (or someone else) to see my contact information?
content: |
  You can **use an alternate address** on your court forms if you worry for your safety. For example, you can use the address of a friend or family member if they have agreed to let you do this and you are able to get your mail from them. This is important so you can receive copies of everything filed in your case and notices from the court.